model ModelName
uses "mmxprs"; !gain access to the Xpress-Optimizer solver

!optional parameters section
parameters
!  SAMPLEPARAM1='c:\test\'
!  SAMPLEPARAM2=false
   PROJECTDIR='' ! for when file is added to project
end-parameters

!sample declarations section
declarations
rows = 1..9

columns = 1..9

tors = 1..9

P: array(rows,columns,tors) of real
Y: array(rows,rows,columns) of mpvar

! ...
  Objective:linctr
end-declarations


P::[0,0,0,1,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,1,
 0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,1,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,1,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,1,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,
0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,0,0,1,0,
 0,0,0,0,0,0,0,0,0,
 0,1,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,
 1,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,
 0,0,0,0,1,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,1,0,
 0,0,0,0,0,1,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,1,0,0,
 0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,1,0,0,0,0,
 0,0,0,0,0,0,0,0,1,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 1,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,
 0,0,0,0,0,0,1,0,0]

!constraints are:

forall(i in rows, j in columns, t in tors)
  P(t,i,j) <= Y(t,i,j)

! (2)
forall(t in tors, j in columns)
  sum(i in rows)Y(t,i,j) = 1

! (3)
forall(t in tors, i in columns)
  sum(j in rows)Y(t,i,j) = 1

forall(i in rows, j in columns)
  sum(t in tors)Y(t,i,j) = 1



! (4)
forall(i in [1,4,7], j in [1,4,7], t in tors)
Y(t,i,j) + Y(t,i+1,j) + Y(t,i+2,j)+ Y(t,i,j+1) + Y(t,i,j+2) + Y(t,i+1,j+1) + Y(t,i+1,j+2) + Y(t,i+2,j+1)  +  Y(t,i+2,j+2) = 1

!forall(i in [1,4,7], j in [1,4,7], t in tors)
!writeln("i=", getsol(i))



! (6)
forall(t in tors, i in rows,j in columns)
Y(t,i,j) is_binary



obj:=sum(i in rows,j in columns, t in tors)P(t,i,j)*Y(t,i,j)

minimize(obj)


writeln("Begin running model")
forall( i in rows, j in columns, t in tors)
	writeln("Y (",t,",",i,",",j,")=",getsol(Y(t,i,j)))

writeln(getsol(obj))
writeln("End running model")

end-model

